// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SensorType.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Communication.Sensors {

  /// <summary>Holder for reflection information generated from SensorType.proto</summary>
  public static partial class SensorTypeReflection {

    #region Descriptor
    /// <summary>File descriptor for SensorType.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SensorTypeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBTZW5zb3JUeXBlLnByb3RvEhVDb21tdW5pY2F0aW9uLlNlbnNvcnMq3gEK",
            "ClNlbnNvclR5cGUSGwoXU0VOU09SX1RZUEVfVU5TUEVDSUZJRUQQABIeChpT",
            "RU5TT1JfVFlQRV9HRU5FUklDX1NDQUxBUhABEhoKFlNFTlNPUl9UWVBFX0dF",
            "TkVSSUNfWFkQAhIbChdTRU5TT1JfVFlQRV9HRU5FUklDX1hZWhADEhMKD1NF",
            "TlNPUl9UWVBFX0dQUxAEEhcKE1NFTlNPUl9UWVBFX0lNQUdJTkcQBRIVChFT",
            "RU5TT1JfVFlQRV9WSURFTxAGEhUKEVNFTlNPUl9UWVBFX0xJREFSEAdCGKoC",
            "FUNvbW11bmljYXRpb24uU2Vuc29yc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Communication.Sensors.SensorType), }, null, null));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Enumeration of the possible sensor types. This is not meant to be an
  /// exhaustive list of all sensor types known. This enumeration serves
  /// to provide a better experience when interacting with sensors of specific
  /// types. For example, allowing for transmission of video stream's FPS or
  /// allowing for transmission of GPS satellie count.
  /// </summary>
  public enum SensorType {
    /// <summary>
    /// Value when the sensor type isn't known or doesn't 
    /// fit any known category.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Generic sensor that provides one singular scalar value.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_GENERIC_SCALAR")] GenericScalar = 1,
    /// <summary>
    /// Generic sensor that provides typical X, Y scalar value
    /// pairs.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_GENERIC_XY")] GenericXy = 2,
    /// <summary>
    /// Generic sensor that provides typical X, Y, Z scalar value
    /// pairs.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_GENERIC_XYZ")] GenericXyz = 3,
    /// <summary>
    /// Standard GPS sensor that can provide global positioning
    /// information.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_GPS")] Gps = 4,
    /// <summary>
    /// Sensor that provides image data. Use this when using a sensor
    /// that transmits imaging that may not be part of a video stream.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_IMAGING")] Imaging = 5,
    /// <summary>
    /// Sensor that provides video data. Use this when dealing
    /// with a video stream and information about the video stream
    /// properties is known.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_VIDEO")] Video = 6,
    /// <summary>
    /// Standar lidar sensor.
    /// </summary>
    [pbr::OriginalName("SENSOR_TYPE_LIDAR")] Lidar = 7,
  }

  #endregion

}

#endregion Designer generated code
